{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./assets/js/worker.js"],"names":["self","chunkIds","moreModules","moduleId","modules","length","installedChunks","pop","installedModules","0","installedWasmModules","wasmImportObjects","2","__webpack_require__","exports","module","i","l","call","e","chunkId","promises","push","Promise","resolve","then","importScripts","forEach","wasmModuleId","installedWasmModuleData","promise","importObject","req","fetch","p","WebAssembly","compileStreaming","all","items","instantiate","instantiateStreaming","x","arrayBuffer","bytes","res","w","instance","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","s","catch","console"],"mappings":"aAAAA,KAAA,sBAAAC,EAAAC,GACA,QAAAC,KAAAD,EACAE,EAAAD,GAAAD,EAAAC,GAEA,KAAAF,EAAAI,QACAC,EAAAL,EAAAM,OAAA,GAIA,IAAAC,KAIAF,GACAG,EAAA,GAIAC,KAIA,IAAAC,GACAC,EAAA,WACA,WAOA,SAAAC,EAAAV,GAGA,GAAAK,EAAAL,GACA,OAAAK,EAAAL,GAAAW,QAGA,IAAAC,EAAAP,EAAAL,IACAa,EAAAb,EACAc,GAAA,EACAH,YAUA,OANAV,EAAAD,GAAAe,KAAAH,EAAAD,QAAAC,IAAAD,QAAAD,GAGAE,EAAAE,GAAA,EAGAF,EAAAD,QAKAD,EAAAM,EAAA,SAAAC,GACA,IAAAC,KAuCA,OAtCAA,EAAAC,KAAAC,QAAAC,UAAAC,KAAA,WAEAnB,EAAAc,IACAM,cAAAN,EAAA,0BAMsBR,GAAA,IAAQQ,QAE9BO,QAAA,SAAAC,GACA,IAAAC,EAAAnB,EAAAkB,GAGA,GAAAC,EACAR,EAAAC,KAAAO,OACA,CACA,IAEAC,EAFAC,EAAApB,EAAAiB,KACAI,EAAAC,MAAApB,EAAAqB,EAAA,IAAmDtB,EAAA,wBAA2BgB,GAAA,gBAE9E,GAAAG,aAAAR,SAAA,mBAAAY,YAAAC,iBACAN,EAAAP,QAAAc,KAAAF,YAAAC,iBAAAJ,GAAAD,IAAAN,KAAA,SAAAa,GACA,OAAAH,YAAAI,YAAAD,EAAA,GAAAA,EAAA,WAEM,sBAAAH,YAAAK,qBACNV,EAAAK,YAAAK,qBAAAR,EAAAD,OACM,CAEND,EADAE,EAAAP,KAAA,SAAAgB,GAA+C,OAAAA,EAAAC,gBAC/CjB,KAAA,SAAAkB,GACA,OAAAR,YAAAI,YAAAI,EAAAZ,KAGAV,EAAAC,KAAAZ,EAAAkB,GAAAE,EAAAL,KAAA,SAAAmB,GACA,OAAA/B,EAAAgC,EAAAjB,IAAAgB,EAAAE,UAAAF,GAAA9B,cAIAS,QAAAc,IAAAhB,IAIAR,EAAAkC,EAAA3C,EAGAS,EAAAmC,EAAAxC,EAGAK,EAAAoC,EAAA,SAAAnC,EAAAoC,EAAAC,GACAtC,EAAAuC,EAAAtC,EAAAoC,IACAG,OAAAC,eAAAxC,EAAAoC,GAA0CK,YAAA,EAAAC,IAAAL,KAK1CtC,EAAA4C,EAAA,SAAA3C,GACA,oBAAA4C,eAAAC,aACAN,OAAAC,eAAAxC,EAAA4C,OAAAC,aAAwDC,MAAA,WAExDP,OAAAC,eAAAxC,EAAA,cAAiD8C,OAAA,KAQjD/C,EAAAgD,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAA/C,EAAA+C,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFApD,EAAA4C,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAA/C,EAAAoC,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAnD,EAAAuD,EAAA,SAAArD,GACA,IAAAoC,EAAApC,KAAAgD,WACA,WAA2B,OAAAhD,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAF,EAAAoC,EAAAE,EAAA,IAAAA,GACAA,GAIAtC,EAAAuC,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAAtD,KAAAmD,EAAAC,IAGtDzD,EAAAqB,EAAA,SAGArB,EAAAgC,KAIAhC,IAAA4D,EAAA,qBCtJA5D,EAAAM,EAAA,GAAAM,KAAAZ,EAAAsD,KAAA,SAAAO,MACevD,IACCwD,iDACAA,cAAcxD,EAAdwD","file":"0.bundle.worker.js","sourcesContent":[" \tself[\"webpackChunk\"] = function webpackChunkCallback(chunkIds, moreModules) {\n \t\tfor(var moduleId in moreModules) {\n \t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t}\n \t\twhile(chunkIds.length)\n \t\t\tinstalledChunks[chunkIds.pop()] = 1;\n \t};\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded chunks\n \t// \"1\" means \"already loaded\"\n \tvar installedChunks = {\n \t\t0: 1\n \t};\n\n \t// object to store loaded and loading wasm modules\n \tvar installedWasmModules = {};\n\n \tfunction promiseResolve() { return Promise.resolve(); }\n\n \tvar wasmImportObjects = {\n \t\t2: function() {\n \t\t\treturn {\n\n \t\t\t};\n \t\t},\n \t};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n \t\tpromises.push(Promise.resolve().then(function() {\n \t\t\t// \"1\" is the signal for \"already loaded\"\n \t\t\tif(!installedChunks[chunkId]) {\n \t\t\t\timportScripts(\"\" + chunkId + \".bundle.worker.js\");\n \t\t\t}\n \t\t}));\n\n \t\t// Fetch + compile chunk loading for webassembly\n\n \t\tvar wasmModules = {\"2\":[2]}[chunkId] || [];\n\n \t\twasmModules.forEach(function(wasmModuleId) {\n \t\t\tvar installedWasmModuleData = installedWasmModules[wasmModuleId];\n\n \t\t\t// a Promise means \"currently loading\" or \"already loaded\".\n \t\t\tif(installedWasmModuleData)\n \t\t\t\tpromises.push(installedWasmModuleData);\n \t\t\telse {\n \t\t\t\tvar importObject = wasmImportObjects[wasmModuleId]();\n \t\t\t\tvar req = fetch(__webpack_require__.p + \"\" + {\"2\":\"0b94da0e51676ca851a2\"}[wasmModuleId] + \".module.wasm\");\n \t\t\t\tvar promise;\n \t\t\t\tif(importObject instanceof Promise && typeof WebAssembly.compileStreaming === 'function') {\n \t\t\t\t\tpromise = Promise.all([WebAssembly.compileStreaming(req), importObject]).then(function(items) {\n \t\t\t\t\t\treturn WebAssembly.instantiate(items[0], items[1]);\n \t\t\t\t\t});\n \t\t\t\t} else if(typeof WebAssembly.instantiateStreaming === 'function') {\n \t\t\t\t\tpromise = WebAssembly.instantiateStreaming(req, importObject);\n \t\t\t\t} else {\n \t\t\t\t\tvar bytesPromise = req.then(function(x) { return x.arrayBuffer(); });\n \t\t\t\t\tpromise = bytesPromise.then(function(bytes) {\n \t\t\t\t\t\treturn WebAssembly.instantiate(bytes, importObject);\n \t\t\t\t\t});\n \t\t\t\t}\n \t\t\t\tpromises.push(installedWasmModules[wasmModuleId] = promise.then(function(res) {\n \t\t\t\t\treturn __webpack_require__.w[wasmModuleId] = (res.instance || res).exports;\n \t\t\t\t}));\n \t\t\t}\n \t\t});\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n \t// object with all WebAssembly.instance exports\n \t__webpack_require__.w = {};\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","// A dependency graph that contains any wasm must all be imported\n// asynchronously. This `bootstrap.js` file does the single async import, so\n// that no one else needs to worry about it again.\n\n// Magic Comments\n// FYI: https://coredump.ro/questions/50896811/vuecli-30-jsonparraypush-is-undefined-when-the-output-library-code-splits\nimport(\"./comlink\")\n        .catch(e => {\n                console.error(\"Error importing `comlink.js`:\", e)\n                console.error(e.message)\n        });\n"],"sourceRoot":""}